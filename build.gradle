buildscript {
  repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    jcenter()
    mavenCentral()
  }
}

plugins {
	id 'java'
	id 'idea'
  id 'org.asciidoctor.convert' version '1.5.8'
  id 'org.springframework.boot' version '2.2.5.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

version = ''
group = 'com.github.i0kits'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

allprojects {
  repositories {
    mavenLocal()

    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }

    jcenter()
    mavenCentral()
  }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'

  implementation 'org.springframework.boot:spring-boot-starter-logging'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'

  runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
  inputs.dir snippetsDir

  logDocuments true
  options doctype: 'book'
  attributes 'revnumber': '1.0.0'
  attributes 'source-highlighter': 'coderay'
  doLast {
    copy {
      from "$outputDir/html5"
      into "$project.buildDir/resources/main/static/docs"
    }
  }
}
